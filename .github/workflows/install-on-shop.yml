name: Install Module on Shop

on: [ push ]

env:
  LABELS: ${{toJSON(github.event.pull_request.labels)}}

jobs:
  deploy:
    name: build dependencies & create artifact
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: 'actions/checkout@v3'
        with:
          path: ''

      - name: Install composer dependencies
        run: composer install --no-dev -o

      - name: Clean-up project
        uses: 'PrestaShopCorp/github-action-clean-before-deploy@v2.0'

      - name: Cache module folder
        uses: 'actions/cache@v3'
        with:
          path: ./
          key: ${{ github.run_id }}

  upload_asset_preproduction:
    runs-on: ubuntu-latest
    needs: [ deploy ]
    steps:

      - name: Retrieve from cache module folder
        id: retrieve-cache
        uses: 'actions/cache@v3'
        with:
          path: ./
          key: ${{ github.run_id }}

      - name: Check if retrieved from cache was successful
        if: steps.retrieve-cache.outputs.cache-hit != 'true'
        run: exit 1

      - name: Manually perform GCP CLI authentication
        run: |
          echo $GOOGLE_JSON_CRED > token.json
          gcloud auth activate-service-account --key-file=token.json
          rm token.json
        env:
          GOOGLE_JSON_CRED: ${{ secrets.G_CREDENTIAL_PREPRODUCTION }}

      - name: Copy env files
        run: |
          gcloud secrets versions access latest --project distribution-preprod --secret=mbo-module-env > .env
          rm -f .env.dist
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.G_CREDENTIAL_PREPRODUCTION }}

      - name: Prepare the zip
        run: |
          cd ..
          zip -r ${{ github.event.repository.name }}.zip ${{ github.event.repository.name }}

      - name: Create & upload artifact for preprod
        uses: 'actions/upload-artifact@v1'
        with:
          name: ${{ github.event.repository.name }}.preprod
          path: ../${{ github.event.repository.name }}.zip

  install_on_shop:
    name: Install module on given shop
    runs-on: ubuntu-latest
    needs: [ upload_asset_preproduction ]
    steps:
    - name: Get the download url of the latest artifacts uploaded
      id: get_latest_artifact
      run: |
        url=$( \
        curl --header "Accept: application/vnd.github+json" \
            --header "Authorization: Bearer ${{ github.token }}" \
            --header "X-GitHub-Api-Version: 2022-11-28" \
            --location "${{ github.api_url }}/repos/${{ github.repository }}/actions/runs/${{ github.run_id }}/artifacts?per_page=1")
        echo $url
        url=$($url  | \
        jq -r '.artifacts[0].archive_download_url')
        echo $url
        echo """url=$url""" >> $GITHUB_OUTPUT

    - name: Install Prestashop module on MyDemoShop
      uses: PrestaShopCorp/github-action-install-module-mydemoshop@main
      with:
        environment: demo-cratik
        shop_name: vgarcia-80
        module_name: ps_mbo
        module_zip_url: ${{ steps.get_latest_artifact.outputs.url }}
      env:
        GOOGLE_APIS_CLIENT_ID: ${{ secrets.GOOGLE_APIS_CLIENT_ID }}
        GOOGLE_APIS_CLIENT_SECRET: ${{ secrets.GOOGLE_APIS_CLIENT_SECRET }}
        GOOGLE_APIS_REFRESH_TOKEN: ${{ secrets.GOOGLE_APIS_REFRESH_TOKEN }}
        INSTALL_MODULE_MYDEMOSHOP_URL: ${{ secrets.INSTALL_MODULE_MYDEMOSHOP_URL }}
