name: PHP tests
on: [push, pull_request]
jobs:
  php-linter:
    name: PHP Syntax check 7.2 => 8.1
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2.0.0
      - name: PHP syntax checker 7.2
        uses: prestashop/github-action-php-lint/7.2@master
      - name: PHP syntax checker 7.3
        uses: prestashop/github-action-php-lint/7.3@master
      - name: PHP syntax checker 7.4
        uses: prestashop/github-action-php-lint/7.4@master
      - name: PHP syntax checker 8.0
        uses: prestashop/github-action-php-lint/8.0@master
      - name: PHP syntax checker 8.1
        uses: prestashop/github-action-php-lint/8.1@master
  php-cs-fixer:
    name: PHP-CS-Fixer
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2.0.0
      - name: Run PHP-CS-Fixer
        uses: prestashopcorp/github-action-php-cs-fixer@master
        with:
          other-cmds: '--config=.php-cs-fixer.dist.php'
  phpstan:
    name: PHPStan
    runs-on: ubuntu-latest
    strategy:
      matrix:
        presta-versions: ['nightly']
    steps:
      - name: Checkout
        uses: actions/checkout@v2.0.0
      - name: Cache vendor folder
        uses: actions/cache@v1
        with:
          path: vendor
          key: php-${{ hashFiles('composer.lock') }}
      - name: Cache composer folder
        uses: actions/cache@v1
        with:
          path: ~/.composer/cache
          key: php-composer-cache
      - run: composer install
      - name: Pull PrestaShop files (Tag ${{ matrix.presta-versions }})
        run: docker run -tid --rm -v ps-volume:/var/www/html --name temp-ps prestashop/prestashop:${{ matrix.presta-versions }}
      - name: Wait for container to be loaded
        run: sleep 10
      - name : Run PHPStan
        run: docker run --rm --volumes-from temp-ps -v $PWD:/web/module -e _PS_ROOT_DIR_=/var/www/html --workdir=/web/module phpstan/phpstan:0.11.19 analyse --configuration=/web/module/tests/phpstan/phpstan-${{ matrix.presta-versions }}.neon

  phpunit:
    name: PHPUnit
    runs-on: ubuntu-latest
    steps:
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 7.4
          coverage: xdebug

      - name: Checkout
        uses: actions/checkout@v2.0.0

            # Add vendor folder in cache to make next builds faster
      - name: Cache vendor folder
        uses: actions/cache@v1
        with:
          path: vendor
          key: php-${{ hashFiles('composer.lock') }}

      # Add composer local folder in cache to make next builds faster
      - name: Cache composer folder
        uses: actions/cache@v1
        with:
          path: ~/.composer/cache
          key: php-composer-cache

      - run: composer install
      - run: make phpunit

  sync-translations:
    name: Extract translations and submit a PR
    runs-on: ubuntu-latest
    if: contains(github.event.pull_request.labels.*.name, 'translations_update')
    steps:
      - name: Checkout module-translation-tool
        uses: actions/checkout@v2.0.0
        with:
          repository: PrestaShopCorp/module-translation-tool
          ref: main
#      - name: Create env file for module-translation-tool
#        run: |
#          echo "APP_GITHUB_TOKEN=${{ secrets.MBO_TOKEN }}" > ./.env
      - name: Create config for module-translation-tool
        run: |
          cp ./module.cfg.example ./module.cfg
          sed -i 's/^MODULE_NAME.*/MODULE_NAME="ps_mbo"/g' ./module.cfg
          sed -i 's/^GIT_REPO_USERNAME.*/GIT_REPO_USERNAME="PrestaShopCorp"/g' ./module.cfg
          sed -i 's/^GIT_REPO_NAME.*/GIT_REPO_NAME="ps_mbo"/g' ./module.cfg
          sed -i 's/^BRANCH.*/BRANCH="${{ github.base_ref }}"/g' ./module.cfg
      - name: Setup git config
        run: |
          git config --global user.name "Github Actions - Module translation tool"
          git config --global user.email "<>"
          git config --global credential.helper 'cache --timeout 3600'
          git config --global url."https://oauth2:${{ secrets.MBO_TOKEN }}@github.com".insteadOf ssh://git@github.com
      - run: composer install
      - name: Extract translations and push
        run: ./scripts/extractCatalogue.sh && ./scripts/pushAndCreatePullRequest.sh
        shell: bash
        env:
          APP_GITHUB_TOKEN: ${{ secrets.MBO_TOKEN }}
