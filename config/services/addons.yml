services:
  _defaults:
    public: true

  mbo.addons.data_prodiver:
    class: PrestaShop\Module\Mbo\Addons\Provider\AddonsDataProvider
    arguments:
      - "@prestashop.adapter.legacy.logger"
      - "@translator"
      - "@doctrine.orm.entity_manager"
    calls:
      - [ "setEmployeeId", ["@=service('prestashop.adapter.legacy.context').getContext().employee?service('prestashop.adapter.legacy.context').getContext().employee.id:0"]]

  mbo.addons.cookie_user:
    class: PrestaShop\Module\Mbo\Addons\User\CookieUser

  mbo.addons.cookie_user.provider:
    class: PrestaShop\Module\Mbo\Addons\User\CookieUserProvider
    arguments:
      - "@mbo.addons.cookie_user"

  mbo.addons.data_provider:
    class: PrestaShop\Module\Mbo\Addons\Provider\AddonsDataProvider
    arguments:
      - '@mbo.addons.client.api'
      - '@prestashop.module.zip.manager'
      - '@=service("mbo.addons.cookie_user.provider").getUser()'
      - '@=service("prestashop.adapter.legacy.configuration").get("ADDONS_API_MODULE_CHANNEL", "stable")'
    properties:
      cacheDir: "%kernel.cache_dir%"

  # Addons API Client
  mbo.addons.client.api:
    class: PrestaShop\Module\Mbo\Addons\ApiClient
    arguments:
      - "@mbo.addons.client.http"
    calls:
      - method: setDefaultParams
        arguments:
          - "@=service('translator').getLocale()"
          - "@=service('prestashop.adapter.data_provider.country').getIsoCodebyId()"
          - "@=service('prestashop.adapter.legacy.configuration').get('_PS_BASE_URL_')"
          - "@=service('prestashop.core.foundation.version').getVersion()"

  mbo.addons.toolbar:
    class: PrestaShop\Module\Mbo\Addons\Toolbar
    arguments:
      - '@mbo.security.permission_checker'
      - '@mbo.addons.data_provider'
      - '@translator'

  mbo.addons.week_advice_provider:
    class: PrestaShop\Module\Mbo\Addons\Provider\WeekAdviceProvider

  # Event subscribers
  mbo.addons.event_subscriber:
    class: PrestaShop\Module\Mbo\Addons\Subscriber\ModuleManagementEventSubscriber
    arguments:
      - '@logger'
    tags:
      - { name: 'kernel.event_subscriber', event: 'module.install' }
